// Generated by CoffeeScript 1.4.0
(function() {
  var app, express, http, io, path, phantom, routes, server;

  express = require('express');

  routes = require('./routes');

  http = require('http');

  path = require('path');

  phantom = require('node-phantom');

  app = express();

  app.configure(function() {
    app.set('port', process.env.PORT || 3000);
    app.set('views', __dirname + '/views');
    app.set('view engine', 'ejs');
    app.use(express.favicon());
    app.use(express.logger('dev'));
    app.use(express.bodyParser());
    app.use(express.methodOverride());
    app.use(app.router);
    return app.use(express["static"](path.join(__dirname, 'public')));
  });

  app.configure('development', function() {
    return app.use(express.errorHandler());
  });

  app.get('/', function(req, res) {
    return res.render('index', {
      title: 'PhantomJS - Web Screen Capture'
    });
  });

  server = require('http').createServer(app).listen(app.get('port'), function() {
    return console.log("Express server listening on port " + app.get('port'));
  });

  io = require('socket.io').listen(server);

  io.sockets.on('connection', function(socket) {
    return socket.on('url', function(data) {
      var fileName, fs, imgfile;
      fileName = data.name;
      imgfile = 'public/images/output/' + fileName + '.png';
      fs = require('fs');
      return phantom.create(function(err, ph) {
        if (err) {
          throw err;
        }
        return ph.createPage(function(err, page) {
          if (err) {
            throw err;
          }
          return page.open(data.url, function(err, status) {
            if (err) {
              throw err;
            }
            page.render(imgfile);
            return page.close(function() {
              io.sockets.emit('image', imgfile.split('public')[1]);
              return ph.exit(function() {
                return console.log('exit');
              });
            });
          });
        });
      });
    });
  });

}).call(this);
